// Copyright Copyright 2023-2024 Andrei Chernyak
// Licensed under the Apache License, Version 2.0

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.РасписаниеРегламентногоЗадания.Доступность = НаборКонстант.пэ_ОтправлятьДанныеПоРасписанию;
	Задание = РегламентноеЗаданиеЭкспорта();
	Если Задание <> Неопределено Тогда
		РасписаниеРегламентногоЗадания = Задание.Расписание;
	КонецЕсли;
	
	ОпределитьНастройкуИнтервалаСбораПоказателей();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ИнтервалСбораПоказателей <> "" Тогда
		КлючОбъекта = "PrometheusExporter";
		КлючНастроек = "ИнтервалСбораПоказателей";
		ИТКВ_БСП.ХранилищеОбщихНастроекСохранить(КлючОбъекта, КлючНастроек, ИнтервалСбораПоказателей);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура пэ_ОтправлятьДанныеПоРасписаниюПриИзменении(Элемент)
	
	ОтправлятьПоРасписанию = НаборКонстант.пэ_ОтправлятьДанныеПоРасписанию;
	Если ОтправлятьПоРасписанию Тогда
		РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
		Элементы.РасписаниеРегламентногоЗадания.Доступность = Истина;
	Иначе
		Элементы.РасписаниеРегламентногоЗадания.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасписаниеРегламентногоЗаданияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("НастроитьРасписаниеЭкспортаЗавершение", ЭтотОбъект);
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	Диалог.Показать(Оповещение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОпределитьНастройкуИнтервалаСбораПоказателей()
	
	ИнтервалыСбораДляВыбора = Новый СписокЗначений;
	
	КлючОбъекта = "PrometheusExporter";
	КлючНастроек = "ИнтервалСбораПоказателей";
	Настройка = ИТКВ_БСП.ХранилищеОбщихНастроекЗагрузить(КлючОбъекта, КлючНастроек, , , );
	Если Настройка <> Неопределено Тогда
		ИнтервалыСбораДляВыбора.Добавить(Настройка);
	КонецЕсли;
	
	ИнтервалыСбораПоказателей = РегистрыСведений.пэ_ИнтервалыСбораПоказателей.ВсеИнтервалы();
	Для Каждого НастройкаИнтервала Из ИнтервалыСбораПоказателей Цикл
		Если ИнтервалыСбораДляВыбора.НайтиПоЗначению(НастройкаИнтервала.Интервал) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ИнтервалыСбораДляВыбора.Добавить(НастройкаИнтервала.Интервал);
	КонецЦикла;
	Элементы.ИнтервалСбораПоказателей.СписокВыбора.ЗагрузитьЗначения(ИнтервалыСбораДляВыбора.ВыгрузитьЗначения());
	ИнтервалСбораПоказателей = Элементы.ИнтервалСбораПоказателей.СписокВыбора[0].Значение;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НовоеРегламентноеЗаданиеЭкспорта(Знач Использование = Ложь, Знач Расписание)
	
		
КонецФункции

&НаСервереБезКонтекста
Функция РегламентноеЗаданиеЭкспорта()
	
	Возврат пэ_Служебный.РегламентноеЗаданиеЭкспорта();
	
КонецФункции

&НаКлиенте
Процедура НастроитьРасписаниеЭкспортаЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	
	Если Расписание <> Неопределено Тогда
		РасписаниеРегламентногоЗадания = Расписание;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


