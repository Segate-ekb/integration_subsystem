#Область ПрограммныйИнтерфейс

Функция ВыполнитьФункцию(ПолноеИмя, Параметры = Неопределено) Экспорт
	
	Результат = Истина;
	ВыполнитьМетод(ПолноеИмя, Параметры, Результат);
	
	Возврат Результат;
	
КонецФункции

Процедура ВыполнитьПроцедуру(ПолноеИмя, Параметры = Неопределено) Экспорт
	
	ВыполнитьМетод(ПолноеИмя, Параметры);
	
КонецПроцедуры

// Вызывает исключение с текстом Сообщение, если Условие не равно Истина.
// Применяется для самодиагностики кода.
//
// Параметры:
//   Условие - Булево - если не равно Истина, то вызывается исключение.
//   Сообщение - Строка - текст сообщения. Если не задан, то исключение вызывается с сообщением по умолчанию.
//   КонтекстПроверки - Строка - например, имя процедуры или функции, в которой выполняется проверка.
//
Процедура Проверить(Знач Условие, Знач Сообщение = "", Знач КонтекстПроверки = "") Экспорт
	
	Если Условие <> Истина Тогда
		
		Если ПустаяСтрока(Сообщение) Тогда
			ТекстИсключения = НСтр("ru = 'Недопустимая операция'"); // Assertion failed
		Иначе
			ТекстИсключения = Сообщение;
		КонецЕсли;
		
		Если Не ПустаяСтрока(КонтекстПроверки) Тогда
			ТекстИсключения = СтрШаблон(
				НСтр("ru = '%1 в %2'"), ТекстИсключения, КонтекстПроверки);
		КонецЕсли;
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
КонецПроцедуры

// Дополняет структуру значениями из другой структуры.
//
// Параметры:
//   Приемник - Структура - коллекция, в которую будут добавляться новые значения.
//   Источник - Структура - коллекция, из которой будут считываться пары Ключ и Значение для заполнения.
//   Заменять - Булево
//            - Неопределено - что делать в местах пересечения ключей источника и приемника:
//                             Истина - заменять значения приемника (самый быстрый способ),
//                             Ложь   - не заменять значения приемника (пропускать),
//                             Неопределено - значение по умолчанию. Бросать исключение.
//
Процедура ДополнитьСтруктуру(Приемник, Источник, Заменять = Неопределено) Экспорт
	
	Для Каждого Элемент Из Источник Цикл
		Если Заменять <> Истина И Приемник.Свойство(Элемент.Ключ) Тогда
			Если Заменять = Ложь Тогда
				Продолжить;
			Иначе
				ВызватьИсключение СтрШаблон(
					НСтр("ru = 'Пересечение ключей источника и приемника: ""%1"".'"),
					Элемент.Ключ);
			КонецЕсли
		КонецЕсли;
		Приемник.Вставить(Элемент.Ключ, Элемент.Значение);
	КонецЦикла;
	
КонецПроцедуры

// Создает массив и помещает в него переданное значение.
//
// Параметры:
//  Значение - Произвольный - любое значение.
//
// Возвращаемое значение:
//  Массив - массив из одного элемента.
//
Функция ЗначениеВМассиве(Знач Значение) Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить(Значение);
	Возврат Результат;
	
КонецФункции

// Дополняет массив МассивПриемник значениями из массива МассивИсточник.
//
// Параметры:
//  МассивПриемник - Массив - массив, в который необходимо добавить значения.
//  МассивИсточник - Массив - массив значений для заполнения.
//  ТолькоУникальныеЗначения - Булево - если истина, то в массив будут включены только уникальные значения.
//
Процедура ДополнитьМассив(МассивПриемник, МассивИсточник, ТолькоУникальныеЗначения = Ложь) Экспорт
	
	Если ТолькоУникальныеЗначения Тогда
		
		УникальныеЗначения = Новый Соответствие;
		
		Для Каждого Значение Из МассивПриемник Цикл
			УникальныеЗначения.Вставить(Значение, Истина);
		КонецЦикла;
		
		Для Каждого Значение Из МассивИсточник Цикл
			Если УникальныеЗначения[Значение] = Неопределено Тогда
				МассивПриемник.Добавить(Значение);
				УникальныеЗначения.Вставить(Значение, Истина);
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		Для Каждого Значение Из МассивИсточник Цикл
			МассивПриемник.Добавить(Значение);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьМетод(ПолноеИмя, Параметры, Результат = Неопределено)
	
	Если Параметры = Неопределено Тогда
		Параметры = Новый Массив;
	КонецЕсли;
	
	ЧастиИмени = СтрРазделить(ПолноеИмя, ".");
	ИмяМодуля = ЧастиИмени[0];
	
	Модуль = ИТКВ_БСПКлиентСерверПовтИсп.ОбщийМодуль(ИмяМодуля);
	Если Модуль = Неопределено Тогда
		ВызватьИсключение СтрШаблон("Неизвестное имя модуля: %1 при вызове метода БСП", ИмяМодуля);
	КонецЕсли;
	ИмяФункции = ИТКВ_БСПКлиентСерверПовтИсп.ИмяФункцииМодуля(ЧастиИмени[1]);
	
	// Параметры
	ПараметрыФункции = Новый Массив;
	Для Индекс = 0 По Параметры.ВГраница() Цикл
		
		ПараметрыФункции.Добавить(СтрШаблон("Параметры[%1]", Индекс));
		
	КонецЦикла;
	
	Выражение = СтрШаблон("Модуль.%1(%2)", ИмяФункции, СтрСоединить(ПараметрыФункции, ","));
	Если Результат = Истина Тогда
		Результат = Вычислить(Выражение);
	Иначе
		Выполнить(Выражение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
